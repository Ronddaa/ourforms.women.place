// payment.js

import axios from "axios";
import { unifiedusersCollection } from "./db/models/unifiedusers.js";
import {
  upsertunifieduser,
  updateunifieduserById,
} from "./services/unifiedusers.js";
import env from "./utils/env.js";

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è MonoBank
const monoBankToken = env("MONOBANK_TOKEN");
const monoBankWebhookUrl = env(
  "MONOBANK_WEBHOOK_URL",
  "https://ourforms.women.place/api/payment-callback"
);

// ---------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ ----------
export const createPaymentHandler = async (req, res, next) => {
  const { user } = req.body;

  // LOG: –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π payload –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
  console.log("üì¢ [createPaymentHandler] –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞.");
  console.log("–¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ (req.body):", JSON.stringify(req.body, null, 2));

  if (!user) {
    console.error(
      "‚ùå [createPaymentHandler] –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç 'user' –≤ –∑–∞–ø—Ä–æ—Å–µ."
    );
    return res.status(400).json({
      error: "–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç user –≤ –∑–∞–ø—Ä–æ—Å–µ.",
    });
  }

  let paymentDataArray;
  let eventType;
  let totalAmountFromFrontend;

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –º–∞—Å—Å–∏–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å (sexIQ –∏–ª–∏ conferences)
  if (user.sexIQ && user.sexIQ.length > 0) {
    paymentDataArray = user.sexIQ;
    eventType = user.sexIQ[0]?.event;
    totalAmountFromFrontend = paymentDataArray[0]?.totalAmount;
  } else if (user.conferences && user.conferences.length > 0) {
    paymentDataArray = user.conferences;
    eventType = user.conferences[0]?.conference;
    totalAmountFromFrontend = paymentDataArray[0]?.totalAmount;
  } else {
    console.error(
      "‚ùå [createPaymentHandler] –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è sexIQ –∏–ª–∏ conferences –≤ –∑–∞–ø—Ä–æ—Å–µ."
    );
    return res.status(400).json({
      error: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è sexIQ –∏–ª–∏ conferences –≤ –∑–∞–ø—Ä–æ—Å–µ.",
    });
  }

  if (
    typeof totalAmountFromFrontend !== "number" ||
    totalAmountFromFrontend <= 0
  ) {
    console.error(
      "‚ùå [createPaymentHandler] –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã."
    );
    return res.status(400).json({ error: "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã" });
  }

  try {
    const { unifieduser } = await upsertunifieduser(user);

    const amountInCents = Math.round(totalAmountFromFrontend * 100);
    const currencyCodeEUR = 978; // EUR

    console.log(
      `üí∂ [createPaymentHandler] –°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –Ω–∞ —Å—É–º–º—É: ${totalAmountFromFrontend} EUR (${amountInCents} —Ü–µ–Ω—Ç–æ–≤)`
    );

    // ----------- –õ–û–ì–ò–ö–ê –†–ï–î–ò–†–ï–ö–¢–ê -----------
     const redirectUrls = {
       "Viena Dinner": "https://ourforms.women.place/thank-viena",
       "Other event": "https://ourforms.women.place/thankyou-other",
       prahakod: "https://prahakod.women.place/thank-you", // ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π URL
       barcelonakod: "https://barcelonakod.women.place/thank-you", // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π URL
       vienakod: "https://vienakod.women.place/thank-you", // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π URL
       warsawkod: "https://warsawkod.women.place/thank-you", // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π URL
       sexiq: "https://ourforms.women.place/sexiqstandart",
       default: "https://ourforms.women.place/thankyou",
     };

    const paymentRedirectUrl = redirectUrls[eventType] || redirectUrls.default;

    // ----------- –ó–∞–ø—Ä–æ—Å –≤ Monobank -----------
    const monoResponse = await axios.post(
      "https://api.monobank.ua/api/merchant/invoice/create",
      {
        amount: amountInCents,
        ccy: currencyCodeEUR,
        redirectUrl: paymentRedirectUrl,
        webHookUrl: monoBankWebhookUrl,
      },
      {
        headers: {
          "X-Token": monoBankToken,
          "Content-Type": "application/json",
        },
      }
    );

    const paymentData = {
      invoiceId: monoResponse.data.invoiceId,
      status: "pending",
    };

    // –û–±–Ω–æ–≤–ª—è–µ–º unifieduser —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
    const sexIQIndex = unifieduser.sexIQ.findIndex(
      (item) => item.event === eventType
    );
    const conferencesIndex = unifieduser.conferences.findIndex(
      (item) => item.conference === eventType
    );

    if (sexIQIndex !== -1) {
      unifieduser.sexIQ[sexIQIndex].paymentData = paymentData;
      await updateunifieduserById(unifieduser._id, {
        sexIQ: unifieduser.sexIQ,
      });
    } else if (conferencesIndex !== -1) {
      unifieduser.conferences[conferencesIndex].paymentData = paymentData;
      await updateunifieduserById(unifieduser._id, {
        conferences: unifieduser.conferences,
      });
    }

    console.log("‚úÖ [createPaymentHandler] –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.");
    res.status(200).json({
      invoiceId: monoResponse.data.invoiceId,
      pageUrl: monoResponse.data.pageUrl,
    });
  } catch (error) {
    console.error(
      "‚ùå [createPaymentHandler] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–ø–ª–∞—Ç—ã:",
      error
    );
    next(error);
  }
};

// ---------- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback MonoBank ----------
export const paymentCallbackHandler = async (req, res, next) => {
  const { invoiceId, status } = req.body;

  if (!invoiceId || !status) {
    console.log("Missing invoiceId or status in callback.");
    return res.status(400).json({ error: "Missing invoiceId or status" });
  }

  try {
    const unifieduser = await unifiedusersCollection.findOne({
      "sexIQ.paymentData.invoiceId": invoiceId,
    });

    if (!unifieduser) {
      console.log("Invoice not found for invoiceId:", invoiceId);
      return res.status(404).json({ error: "Invoice not found" });
    }

    const statusMap = {
      success: "paid",
      pending: "pending",
      failure: "failed",
    };
    const monoStatus = status.toLowerCase();

    // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π sexIQ —ç–ª–µ–º–µ–Ω—Ç
    const sexIQEntry = unifieduser.sexIQ.find(
      (entry) => entry.paymentData?.invoiceId === invoiceId
    );

    if (sexIQEntry && sexIQEntry.paymentData) {
      sexIQEntry.paymentData.status = statusMap[monoStatus] || "failed";

      await updateunifieduserById(unifieduser._id, {
        sexIQ: unifieduser.sexIQ,
      });
      console.log(
        `Unified user ${unifieduser._id} saved successfully AFTER payment callback.`
      );
    } else {
      console.warn(
        `‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –¥–ª—è invoiceId ${invoiceId} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ unifieduser ${unifieduser._id}`
      );
    }

    res.status(200).json({ message: "Payment status updated" });
  } catch (error) {
    console.error("Error in payment-callback:", error);
    next(error);
  }
};
